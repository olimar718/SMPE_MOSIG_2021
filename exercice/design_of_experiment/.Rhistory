#non_smokers= df %>% filter(Smoker== "No") %>% mutate(smoker_variable=0)
#all_member = rbind(smokers,non_smokers)
death=FALSE
death[df$Status=="Dead"] <- 1
death[df$Status=="Alive"] <-0
Age <- df$Age
df
smokers= df %>% filter( Smoker== "Yes") %>% mutate(smoker_variable=1)
non_smokers= df %>% filter(Smoker== "No") %>% mutate(smoker_variable=0)
all_member = rbind(smokers,non_smokers)
smokers= df %>% filter( Smoker== "Yes") %>% mutate(smoker_variable=1)
non_smokers= df %>% filter(Smoker== "No") %>% mutate(smoker_variable=0)
all_member = rbind(smokers,non_smokers)
all_member
smokers= df %>% filter( Smoker== "Yes") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Smoker== "No") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1[df$Status=="Dead"]<-1
smokers= df %>% filter( Smoker== "Yes") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Smoker== "No") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1=FALSE
death1[df$Status=="Dead"]<-1
death1
smokers= df %>% filter( Smoker== "Yes") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Smoker== "No") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1=FALSE
death1[df$Status=="Dead"]<-1
death1[df$Status=="Alive"]<-1
death1
smokers= df %>% filter( Smoker== "Yes") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Smoker== "No") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1=FALSE
death1[df$Status=="Dead"]<-1
death1[df$Status=="Alive"]<-0
death1
smokers= df %>% filter( Smoker== "Yes") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Smoker== "No") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1=FALSE
death1[df$Status=="Dead"]=1
death1[df$Status=="Alive"]=0
Age = df$Age
Age
smokers= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Status== "Alive") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1=FALSE
death1[df$Status=="Dead"]=1
death1[df$Status=="Alive"]=0
Age = df$Age
glm(all_member$death_variabe,all_member$Age,family = binomial())
smokers= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Status== "Alive") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1=FALSE
death1[df$Status=="Dead"]=1
death1[df$Status=="Alive"]=0
Age = df$Age
glm(all_member$death_variabe~all_member$Age,family = binomial())
smokers= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Status== "Alive") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1=FALSE
death1[df$Status=="Dead"]=1
death1[df$Status=="Alive"]=0
Age = df$Age
#glm(all_member$death_variabe~all_member$Age,family = binomial())
glm(death1~Age,data=df,family=binomial(logit))
smokers= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Status== "Alive") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
death1=FALSE
death1[df$Status=="Dead"]=1
death1[df$Status=="Alive"]=0
Age = df$Age
glm(all_member$death_variabe~all_member$Age,family = binomial())
glm(death1~Age,data=df,family=binomial(logit))
smokers= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Status== "Alive") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
regression = glm(all_member$death_variabe~all_member$Age,family = binomial(link = logit))
regression
smokers= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Status== "Alive") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
all_smokers = all_member %>% filter(Smoker == "Yes")
regression = glm(all_smokers$death_variabe~all_smokers$Age,family = binomial(link = logit))
regression
exp(cbind(coef(regression), confint(regression)))
knitr::opts_chunk$set(echo = TRUE)
cor.test(phyto$MOB,phyto$HIP)
knitr::opts_chunk$set(echo = TRUE)
myData <- read.table(file = "bats.csv",sep = ";",skip = 3,header = T)
names(myData)
phyto = myData[(myData$Diet==1),]
library(ggplot2)
ggplot(phyto, aes(x=BOW,y=BRW))+
geom_point()+
ggtitle("Brain mass in function of body mass")+
xlab("Body mass grams")+
ylab("Brain mass miligrams")
regression=lm(BRW~BOW,data=phyto)
regression
summary(regression)
anova(regression)
plot(regression$fitted.values,regression$residuals,xlab="Predicted",ylab="Residual")
plot(regression)
phytobis=phyto[which(phyto$BRW<8000),]
regressionbis=lm(BRW ~ BOW,data=phytobis)
summary(regressionbis)
par(mfcol=c(2,2))
plot(regression)
plot(regressionbis)
library(corrplot)
phytoNum=phyto[,c(4:8)]
mat.cor=cor(phytoNum)
corrplot(mat.cor, type= "upper")
cor.test(phyto$BRW,phyto$HIP)
cor.test(phyto$BRW,phyto$MOB)
cor.test(phyto$BRW,phyto$AUD)
regm=lm(BRW~AUD+MOB+HIP,data=phytobis)
summary(regm)
anova(regm)
cor.test(phyto$MOB,phyto$HIP)
knitr::opts_chunk$set(echo = TRUE)
reg_correlated=lm(MOB~HIP,data=phytobis)
phytobis=phyto[which(phyto$BRW<8000),]
knitr::opts_chunk$set(echo = TRUE)
myData <- read.table(file = "bats.csv",sep = ";",skip = 3,header = T)
names(myData)
phyto = myData[(myData$Diet==1),]
library(ggplot2)
ggplot(phyto, aes(x=BOW,y=BRW))+
geom_point()+
ggtitle("Brain mass in function of body mass")+
xlab("Body mass grams")+
ylab("Brain mass miligrams")
regression=lm(BRW~BOW,data=phyto)
regression
summary(regression)
anova(regression)
plot(regression$fitted.values,regression$residuals,xlab="Predicted",ylab="Residual")
plot(regression)
phytobis=phyto[which(phyto$BRW<8000),]
regressionbis=lm(BRW ~ BOW,data=phytobis)
summary(regressionbis)
par(mfcol=c(2,2))
plot(regression)
plot(regressionbis)
library(corrplot)
phytoNum=phyto[,c(4:8)]
mat.cor=cor(phytoNum)
corrplot(mat.cor, type= "upper")
cor.test(phyto$BRW,phyto$HIP)
cor.test(phyto$BRW,phyto$MOB)
cor.test(phyto$BRW,phyto$AUD)
regm=lm(BRW~AUD+MOB+HIP,data=phytobis)
summary(regm)
anova(regm)
cor.test(phyto$MOB,phyto$HIP)
reg_correlated=lm(MOB~HIP,data=phytobis)
reg_correlated=lm(MOB~HIP,data=phytobis)
reg_correlated=lm(MOB~HIP,data=phytobis)
summary(reg_correlated)
regm=lm(BRW~AUD+MOB,data=phytobis)
summary(regm)
anova(regm)
regmbis=lm(BRW~AUD+MOB,data=phytobis)
summary(regmbis)
anova(regmbis)
regmbis=lm(BRW~AUD+HIP,data=phytobis)
summary(regmbis)
anova(regmbis)
reg0=lm(BRW~1,data = phyto)
step(reg0,scope = BRW ~AUD + MOB +HIP, direction = "forward")
myData$Diet_F = as.factor(myData$Diet)
with(myData,plot(AUD~Diet))
with(myData,plot(AUD~Diet))
myData$Diet_F = as.factor(myData$Diet)
with(myData,plot(AUD~Diet))
with(myData,plot(AUD~Diet_F))
lm = lm(AUD~Diet_F,data=myData)
anova(lm)
lm = lm(AUD~Diet_F,data=myData)
summary(lm)
anova(lm)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(Rmisc)
class1834 = df %>% filter(Age >= 18 & Age < 34)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(Rmisc)
df = read.csv("Subject6_smoking.csv")
compute_confidence_interval_and_plot <- function(smoker_arg,df_arg, title_arg){
alives= df_arg %>% filter(Status == "Alive"& Smoker== smoker_arg) %>% mutate(death_variable=0)
dead= df_arg %>% filter(Status == "Dead"& Smoker== smoker_arg) %>% mutate(death_variable=1)
all_member = rbind(alives,dead)
my_ci= CI(x=all_member$death_variable,ci=0.95)
# inspired by https://app-learninglab.inria.fr/moocrr/gitlab/moocrr-session3/moocrr-reproducibility-study/blob/master/module3/exercice3/paradoxe_de_simpson_par_EC30.Rmd
death_rate<-c(my_ci[2])
label <- c(paste("ci |u| |m| |d|",toString(my_ci)))
bp<-barplot(death_rate,col="orange",ylim=c(0,1),names.arg=label, main=title_arg); box()
arrows(bp,my_ci[1],bp,my_ci[3],lwd=1.5,angle=90,length=0.1,code=3)
}
compute_confidence_interval_and_plot(smoker_arg="Yes",df_arg = df, title_arg="All smokers death rate")
compute_confidence_interval_and_plot(smoker_arg="No",df_arg = df, title_arg="All non smokers death rate")
class1834 = df %>% filter(Age >= 18 & Age < 34)
class3454 = df %>% filter(Age >= 34 & Age < 54)
class5464 = df %>% filter(Age >= 54 & Age < 64)
class64 = df %>% filter(Age >= 64)
mortality_ratio_and_ci <- function(df_arg, title_arg){
compute_confidence_interval_and_plot(smoker_arg="Yes",df_arg = df_arg, title_arg = paste(title_arg,"smokers"))
compute_confidence_interval_and_plot(smoker_arg="No",df_arg = df_arg, title_arg = paste(title_arg,"non smokers"))
}
mortality_ratio_and_ci(class1834,"18 34 age class")
mortality_ratio_and_ci(class3454,"34 54 age class")
mortality_ratio_and_ci(class5464,"54 64 age class")
mortality_ratio_and_ci(class64,"64 + age class")
# TODO confidence interval here as well ?
compute_smoker_ratio <- function(df_arg, title_arg){
smokers= df_arg %>% filter( Smoker== "Yes") %>% mutate(smoker_variable=1)
non_smokers= df_arg %>% filter(Smoker== "No") %>% mutate(smoker_variable=0)
all_member = rbind(smokers,non_smokers)
my_ci= CI(x=all_member$smoker_variable,ci=0.95)
# inspired by https://app-learninglab.inria.fr/moocrr/gitlab/moocrr-session3/moocrr-reproducibility-study/blob/master/module3/exercice3/paradoxe_de_simpson_par_EC30.Rmd
smoker_rate<-c(my_ci[2])
label <- c(paste("ci |u| |m| |d|",toString(my_ci)))
bp<-barplot(smoker_rate,col="orange",ylim=c(0,1),names.arg=label, main=title_arg); box()
arrows(bp,my_ci[1],bp,my_ci[3],lwd=1.5,angle=90,length=0.1,code=3)
}
compute_smoker_ratio(df_arg = df, title_arg = "global ratio of smoker")
compute_smoker_ratio(df_arg = class1834, title_arg = "Ratio of smoker 18 to 34")
compute_smoker_ratio(df_arg = class3454, title_arg = "Ratio of smoker 34 to 54")
compute_smoker_ratio(df_arg = class5464, title_arg = "Ratio of smoker 54 to 64")
compute_smoker_ratio(df_arg = class64,title_arg = "Ratio of smoker 64 +" )
smokers= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
non_smokers= df %>% filter(Status== "Alive") %>% mutate(death_variabe=0)
all_member = rbind(smokers,non_smokers)
all_smokers = all_member %>% filter(Smoker == "Yes")
regression = glm(all_smokers$death_variabe~all_smokers$Age,family = binomial(link = logit))
regression
exp(cbind(coef(regression), confint(regression)))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(Rmisc)
# inspired by https://gitlab.ensimag.fr/vaudeyj/mosig-smpe/-/blob/master/Peer%20evaluated%20exercise/PeerEvaluated.pdf
dead= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(Rmisc)
df = read.csv("Subject6_smoking.csv")
compute_confidence_interval_and_plot <- function(smoker_arg,df_arg, title_arg){
alives= df_arg %>% filter(Status == "Alive"& Smoker== smoker_arg) %>% mutate(death_variable=0)
dead= df_arg %>% filter(Status == "Dead"& Smoker== smoker_arg) %>% mutate(death_variable=1)
all_member = rbind(alives,dead)
my_ci= CI(x=all_member$death_variable,ci=0.95)
# inspired by https://app-learninglab.inria.fr/moocrr/gitlab/moocrr-session3/moocrr-reproducibility-study/blob/master/module3/exercice3/paradoxe_de_simpson_par_EC30.Rmd
death_rate<-c(my_ci[2])
bp<-barplot(death_rate,col="orange",ylim=c(0,1),names.arg=sprintf("0.95 CI: u=%.3f,m=%.3f,l= %.3f",my_ci[1],my_ci[2],my_ci[3]), main=title_arg); box()
arrows(bp,my_ci[1],bp,my_ci[3],lwd=1.5,angle=90,length=0.1,code=3)
}
par(mfcol=c(1,2))
compute_confidence_interval_and_plot(smoker_arg="Yes",df_arg = df, title_arg="All smokers death rate")
compute_confidence_interval_and_plot(smoker_arg="No",df_arg = df, title_arg="All non smokers death rate")
class1834 = df %>% filter(Age >= 18 & Age < 34)
class3454 = df %>% filter(Age >= 34 & Age < 54)
class5464 = df %>% filter(Age >= 54 & Age < 64)
class64 = df %>% filter(Age >= 64)
mortality_ratio_and_ci <- function(df_arg, title_arg){
compute_confidence_interval_and_plot(smoker_arg="Yes",df_arg = df_arg, title_arg = paste(title_arg,"smokers"))
compute_confidence_interval_and_plot(smoker_arg="No",df_arg = df_arg, title_arg = paste(title_arg,"non"))
}
par(mfcol=c(2,4))
mortality_ratio_and_ci(class1834,"18 34 age class")
mortality_ratio_and_ci(class3454,"34 54 age class")
mortality_ratio_and_ci(class5464,"54 64 age class")
mortality_ratio_and_ci(class64,"64 + age class")
# TODO confidence interval here as well ?
compute_smoker_ratio <- function(df_arg, title_arg){
smokers= df_arg %>% filter( Smoker== "Yes") %>% mutate(smoker_variable=1)
non_smokers= df_arg %>% filter(Smoker== "No") %>% mutate(smoker_variable=0)
all_member = rbind(smokers,non_smokers)
my_ci= CI(x=all_member$smoker_variable,ci=0.95)
# inspired by https://app-learninglab.inria.fr/moocrr/gitlab/moocrr-session3/moocrr-reproducibility-study/blob/master/module3/exercice3/paradoxe_de_simpson_par_EC30.Rmd
smoker_rate<-c(my_ci[2])
bp<-barplot(smoker_rate,col="orange",ylim=c(0,1),names.arg=sprintf("0.95 CI: u=%.3f,m=%.3f,l= %.3f",my_ci[1],my_ci[2],my_ci[3]), main=title_arg); box()
arrows(bp,my_ci[1],bp,my_ci[3],lwd=1.5,angle=90,length=0.1,code=3)
}
par(mfcol=c(2,3))
compute_smoker_ratio(df_arg = df, title_arg = "global ratio of smoker")
compute_smoker_ratio(df_arg = class1834, title_arg = "Ratio of smoker 18 to 34")
compute_smoker_ratio(df_arg = class3454, title_arg = "Ratio of smoker 34 to 54")
compute_smoker_ratio(df_arg = class5464, title_arg = "Ratio of smoker 54 to 64")
compute_smoker_ratio(df_arg = class64,title_arg = "Ratio of smoker 64 +" )
# inspired by https://gitlab.ensimag.fr/vaudeyj/mosig-smpe/-/blob/master/Peer%20evaluated%20exercise/PeerEvaluated.pdf
dead= df %>% filter( Status== "Dead") %>% mutate(death_variabe=1)
alives= df %>% filter(Status== "Alive") %>% mutate(death_variabe=0)
all_member = rbind(dead,alives)
all_smokers = all_member %>% filter(Smoker == "Yes")
regression_smoker = glm(all_smokers$death_variabe~all_smokers$Age,family = binomial(link = logit))
summary(regression_smoker)
all_non_smokers = all_member %>% filter(Smoker == "No")
regression_non_smoker = glm(all_non_smokers$death_variabe~all_non_smokers$Age,family = binomial(link = logit))
summary(regression_non_smoker)
ggplot(all_member)+
aes(x = Age) +
aes(y = death_variabe) +
aes(group = Smoker) +
stat_smooth( method="glm", se=TRUE, fullrange=TRUE,
method.args = list(family=binomial), aes(color=Smoker, fill = Smoker)) +
ylab("Probabilité d'être morte") +
ggtitle("Evolution de la probabilité de décès avec l'âge initial des participantes")
ggplot(all_member)+
aes(x = Age) +
aes(y = death_variabe) +
aes(group = Smoker) +
stat_smooth( method="glm", se=TRUE, fullrange=TRUE,
method.args = list(family=binomial), aes(color=Smoker, fill = Smoker)) +
ylab("Probability of death")
ggplot(all_member)+
aes(x = Age) +
aes(y = death_variabe) +
aes(group = Smoker) +
stat_smooth( method="glm", se=F, fullrange=TRUE,
method.args = list(family=binomial), aes(color=Smoker, fill = Smoker)) +
ylab("Probability of death")
help()
help("stat_smooth")
ggplot(all_member)+
aes(x = Age) +
aes(y = death_variabe) +
aes(group = Smoker) +
stat_smooth( method="glm", se=TRUE, fullrange=TRUE,level=.99,
method.args = list(family=binomial), aes(color=Smoker, fill = Smoker)) +
ylab("Probability of death")
ggplot(all_member)+
aes(x = Age) +
aes(y = death_variabe) +
aes(group = Smoker) +
stat_smooth( method="glm", se=TRUE, fullrange=TRUE,level=.95,
method.args = list(family=binomial), aes(color=Smoker, fill = Smoker)) +
ylab("Probability of death")
ggplot(all_member)+
aes(x = Age) +
aes(y = death_variabe) +
aes(group = Smoker) +
stat_smooth( method="glm", se=TRUE, fullrange=TRUE,level=.90,
method.args = list(family=binomial), aes(color=Smoker, fill = Smoker)) +
ylab("Probability of death")
ggplot(all_member)+
aes(x = Age) +
aes(y = death_variabe) +
aes(group = Smoker) +
stat_smooth( method="glm", se=TRUE, fullrange=TRUE,level=.70,
method.args = list(family=binomial), aes(color=Smoker, fill = Smoker)) +
ylab("Probability of death")
ggplot(all_member)+
aes(x = Age) +
aes(y = death_variabe) +
aes(group = Smoker) +
stat_smooth( method="glm", se=TRUE, fullrange=TRUE,level=.95,
method.args = list(family=binomial), aes(color=Smoker, fill = Smoker)) +
ylab("Probability of death")
class1834 = df %>% filter(Age >= 18 & Age < 34)
class3454 = df %>% filter(Age >= 34 & Age < 54)
class5464 = df %>% filter(Age >= 54 & Age < 64)
class64 = df %>% filter(Age >= 64)
mortality_ratio_and_ci <- function(df_arg, title_arg){
compute_confidence_interval_and_plot(smoker_arg="Yes",df_arg = df_arg, title_arg = paste(title_arg,"smokers"))
compute_confidence_interval_and_plot(smoker_arg="No",df_arg = df_arg, title_arg = paste(title_arg,"non"))
}
par(mfcol=c(2,4),cex.axis=0.5)
mortality_ratio_and_ci(class1834,"18 34 age class")
mortality_ratio_and_ci(class3454,"34 54 age class")
mortality_ratio_and_ci(class5464,"54 64 age class")
mortality_ratio_and_ci(class64,"64 + age class")
class1834 = df %>% filter(Age >= 18 & Age < 34)
class3454 = df %>% filter(Age >= 34 & Age < 54)
class5464 = df %>% filter(Age >= 54 & Age < 64)
class64 = df %>% filter(Age >= 64)
mortality_ratio_and_ci <- function(df_arg, title_arg){
compute_confidence_interval_and_plot(smoker_arg="Yes",df_arg = df_arg, title_arg = paste(title_arg,"smokers"))
compute_confidence_interval_and_plot(smoker_arg="No",df_arg = df_arg, title_arg = paste(title_arg,"non"))
}
par(mfcol=c(2,4),cex.axis=0.8)
mortality_ratio_and_ci(class1834,"18 34 age class")
mortality_ratio_and_ci(class3454,"34 54 age class")
mortality_ratio_and_ci(class5464,"54 64 age class")
mortality_ratio_and_ci(class64,"64 + age class")
plot(cars)
read.csv("run_g5k.csv")
df = read.csv("run_g5k.csv")
plot(df$nan)
library(ggplot2)
p <- ggplot(df, aes(x = as.numeric(row.names(df)),y=nan)
print(p)
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)
print(p)
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan))
print(p)
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point()
print(p)
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point() + geom_smooth()
print(p)
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point() + geom_smooth() + xlab("Iteration number")+ ylab("mean reward")
print(p)
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point() + geom_line() + xlab("Iteration number")+ ylab("mean reward")
print(p)
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point()  + xlab("Iteration number")+ ylab("mean reward")
print(p)
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point()  + xlab("Iteration number")+ ylab("mean reward")
print(p,vp = vp)
def.off()
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point()  + xlab("Iteration number")+ ylab("mean reward")
df = read.csv("run_g5k.csv")
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point()  + xlab("Iteration number")+ ylab("mean reward")
print(p)
df = read.csv("run_g5k.csv")
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point()  + xlab("Iteration number")+ ylab("mean reward")
print(p)
df = read.csv("run_g5k.csv")
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point()  + xlab("Iteration number")+ ylab("mean reward")
print(p)
dev.off()
df = read.csv("run_g5k.csv")
library(ggplot2)
p <- ggplot(data = df, aes(x = as.numeric(row.names(df)),y=nan)) + geom_point()  + xlab("Iteration number")+ ylab("mean reward")
print(p)
print(p)
pwd
cat first_experiment.csv
cat first_experiment.csv
cat first_experiment.csv
cat
less
less
less
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
cat scripts/run_benchmarking2.sh
cat scripts/run_benchmarking2.sh
cat scripts/run_benchmarking2.sh
cat scripts/run_benchmarking2.sh
cat scripts/run_benchmarking2.sh
knitr::opts_chunk$set(echo = TRUE)
cat scripts/run_benchmarking2.sh
cat first_experiment.csv
read.csv(file = "result.csv")
setwd("~/git/SMPE_MOSIG_2021/exercice/design_of_experiment")
cat first_experiment.csv
read.csv(file = "result.csv")
df =read.csv(file = "result.csv")
df
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x1=1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x1==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x2==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x3==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x4==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x5==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x6==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x7==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x8==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x9==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x10==1)
library(dplyr)
df =read.csv(file = "result.csv")
df %>% filter(x11==1)
